Етапи роботи над проектом:

0. Отримання від замовника технічного завдання (макет сайту, розробки необхідного функціоналу і т.д.).
1. Дуже детальний розгляд завдання з розбиттям на блоки, секції, уточненням на яких технологіях буде робитися. 
2. Обговорення його і уточнення всіх завдань та побажань.
3. Оцінка реального сроку виконання даного завдання.
4. Прорахунок вартості, озвучування і обговорення з клієнтом сроків здачі, певних дедлайнів і кінцевого сроку здачі продукту.


Ngrok - це спеціальна утиліта, яка допомагає розробникам за допомогою сервісу ngrok.io створювати локальний сервер і за допомогою технології 
тунелювання прокидувати його в інтернет. Замовнику даємо url, і він переходячи по ній потрапляє на наш локальний ПК по цій адресі. 


1. Створення локально необхідних папок і файлів (css/main.css, js/main.js, img, fonts, index.html).
2. Створення віддаленого репозиторія і підключення його для роботи локально.
	git remote add origin https://repo_name 
Створюємо в проекті файл .gitignore і додаємо туди те, що не потрібно показувати в закгальному репо( logs, tmp, cache, файли IDE - .idea, passwords, tokens, системні сховані файли і т.д ).
Це необхідно зробити перед комітом.
	nano .gitignore
3.  


Уточнення по роботі з Git:
 - якщо мені треба розпочати на роботу зі своїм віддаленим репо на новому ПК, то я ввожу - git clone https://repo_name. Дана команда і скачає репо і підключить його як віддалений.
 - якщо мені потрібно завантажити всі свої локальні напрацювання на віддалений репо - git push origin branch-name(master)
 - якщо в мене вже підключено віддалений репо, і я працював з ним десь на іншому ПК, і мені необхідно скачати всі останні напрацювання - git pull origin 
 - якщо я розробляю новий функціонал я створюю нову ветку завжди. Переключаюсь на неї - git checkout -b new-branch.  Після роботи я її  merge in master і потім git push origin.